DROP TRIGGER ACTUALIZAR_PESO_CHIPEO;
DROP TRIGGER CONTROL_CALIDAD_CHIPEO;
DROP TRIGGER CONTROL_CAPATAZ_CHIPEO;
DROP TRIGGER CONTROL_PESO_CHIPEO;
DROP TRIGGER CONTROL_PESO_COCCION;

DROP TABLE STOCK;
DROP TABLE VENTA;
DROP TABLE CLIENTE;
DROP TABLE PAPEL;
DROP TABLE PASTA;
DROP TABLE ENERGIA;
DROP TABLE COCCION;
DROP TABLE MADERACHIP;
DROP TABLE LOTEMADERA;
DROP TABLE PROVEEDOR;
DROP TABLE EMPLEADO;

CREATE TABLE EMPLEADO
(
    CI NUMBER(10) PRIMARY KEY,
    NOMBRECOMPLETO VARCHAR2(50),
    TELEFONO NUMBER(10),
    CELULAR NUMBER(10),
    DIRECCION VARCHAR2(50),
    ESTCIVIL VARCHAR2(1),
    SUELDONOM NUMBER(10),
    OFICIO VARCHAR2(10),
    SECTOR VARCHAR2(10),
    TIENEHIJOS VARCHAR2(1) CHECK (TIENEHIJOS IN ('S','N')),
    PUESTO VARCHAR2(10),
    CIJEFE NUMBER(8) DEFAULT NULL REFERENCES EMPLEADO
);

CREATE TABLE PROVEEDOR
(
    EMAIL VARCHAR2(50) PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    TELEFONO NUMBER(10),
    RUT VARCHAR2(20)  DEFAULT NULL 
);

CREATE TABLE LOTEMADERA
(
    IDLOTE NUMBER(10) PRIMARY KEY,
    CIRESPONSABLE NUMBER(10) NOT NULL REFERENCES EMPLEADO,
    EMAILPROOVEDOR VARCHAR2(50) NOT NULL REFERENCES PROVEEDOR,
    PESOINICIAL NUMBER(10) CHECK(PESOINICIAL > 0),
    PESOACTUAL NUMBER(10) CHECK(PESOACTUAL >= 0),
    ESTADO VARCHAR2(1) CHECK (ESTADO IN ('S', 'N')),
    FECHA DATE NOT NULL
);

CREATE TABLE MADERACHIP 
(
    ID NUMBER(10) PRIMARY KEY,
    LOTE NUMBER(10) NOT NULL REFERENCES LOTEMADERA,
    EMPLEADO NUMBER(10) NOT NULL REFERENCES EMPLEADO,
    PESOMADERALOTE NUMBER(10) CHECK(PESOMADERALOTE > 0),
    PESOCHIP NUMBER(10) CHECK(PESOCHIP > 0),
    FECHA DATE NOT NULL
);

CREATE TABLE COCCION
(
    ID NUMBER(10) PRIMARY KEY,
    IDCHIP NUMBER(10) NOT NULL REFERENCES MADERACHIP,
    PESO NUMBER(10) CHECK(PESO > 0),
    FECHA DATE NOT NULL
);

CREATE TABLE PASTA 
(
	IDPASTA NUMBER(10) REFERENCES COCCION(ID) PRIMARY KEY,
    PHIDRO NUMBER(10) CHECK (PHIDRO > 0),
    ACIDO NUMBER(10) CHECK (ACIDO > 0),
	PESO NUMBER(10) CHECK(PESO > 0)
);

CREATE TABLE ENERGIA 
(
	IDENERGIA NUMBER(10) REFERENCES COCCION(ID) PRIMARY KEY,
	FECHA DATE NOT NULL,
    KW NUMBER(10) NOT NULL
);


CREATE TABLE PAPEL
(
    IDPAPEL NUMBER(10) PRIMARY KEY,
    IDPASTA NUMBER(10) REFERENCES PASTA(IDPASTA),
    PESO NUMBER(10) CHECK(PESO > 0),
    FECHA DATE NOT NULL
);

CREATE TABLE CLIENTE
(
    EMAIL VARCHAR2(50) PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    TELEFONO NUMBER(10),
    RUT VARCHAR2(20) DEFAULT NULL 
);

CREATE TABLE VENTA
(
    EMAILCLI VARCHAR2(50) REFERENCES CLIENTE(EMAIL),
    CIVENDEDOR NUMBER(10) REFERENCES EMPLEADO(CI),
    IDPAPEL NUMBER(10) REFERENCES PAPEL(IDPAPEL),
    PRECIO NUMBER(10) NOT NULL,
    PRIMARY KEY(EMAILCLI,CIVENDEDOR,IDPAPEL)
);

CREATE TABLE STOCK
(
    STOCKID NUMBER(10) PRIMARY KEY,
    CANTPHIDRO NUMBER(10) DEFAULT NULL,
    CANTACIDO NUMBER(10) DEFAULT NULL
);

/*****************************************************************************************************/

CREATE OR REPLACE TRIGGER CONTROL_PESO_CHIPEO BEFORE INSERT OR UPDATE ON MADERACHIP
FOR EACH ROW

DECLARE
	v_peso_lote NUMBER(10);
BEGIN

	SELECT l.PESOACTUAL INTO v_peso_lote FROM LOTEMADERA l WHERE :NEW.LOTE = l.IDLOTE;

	IF UPDATING THEN 
	  v_peso_lote := v_peso_lote + :OLD.PESOMADERALOTE;
	END IF;  

	IF  (v_peso_lote < :NEW.PESOMADERALOTE) THEN
		Raise_Application_Error (-20002, 'Fallo el control de peso');
	END IF;

END;
/
ALTER TRIGGER CONTROL_PESO_CHIPEO ENABLE;

/*****************************************************************************************************/

CREATE OR REPLACE TRIGGER CONTROL_CAPATAZ_CHIPEO BEFORE INSERT OR UPDATE ON MADERACHIP
For Each Row

DECLARE
	v_cijefe NUMBER(10);
BEGIN

SELECT e.CIJEFE INTO v_cijefe FROM EMPLEADO e WHERE e.CI = :NEW.EMPLEADO;

IF(v_cijefe != NULL) THEN
    Raise_Application_Error (-20003, 'Los chips deben ser llevados por capataces');
END IF;

END;
/
ALTER TRIGGER CONTROL_CAPATAZ_CHIPEO ENABLE;

/*****************************************************************************************************/

CREATE OR REPLACE TRIGGER CONTROL_CALIDAD_CHIPEO BEFORE INSERT OR UPDATE ON MADERACHIP
FOR EACH ROW
 follows CONTROL_PESO_CHIPEO
DECLARE
	v_peso_chip NUMBER(10);
	v_peso_madera NUMBER(10);
	v_porcentaje NUMBER(10);

BEGIN

	SELECT SUM(m.PESOCHIP) INTO v_peso_chip  FROM MADERACHIP m WHERE TRUNC(sysdate) = TRUNC(m.FECHA);
	SELECT SUM(m.PESOMADERALOTE) INTO v_peso_madera FROM MADERACHIP m WHERE TRUNC(sysdate) = TRUNC(m.FECHA);

	IF UPDATING THEN 
		v_peso_chip := v_peso_chip - :OLD.PESOCHIP;
		v_peso_madera := v_peso_madera - :OLD.PESOMADERALOTE;
	END IF;  

	v_peso_chip := v_peso_chip + :NEW.PESOCHIP;
	v_peso_madera := v_peso_madera + :NEW.PESOMADERALOTE;
	v_porcentaje := v_peso_chip *  v_peso_madera / 100;

	IF  (v_porcentaje < 95) THEN
		Raise_Application_Error (-20001, 'Fallo el control de calidad');
	END IF;

END;
/
ALTER TRIGGER CONTROL_CALIDAD_CHIPEO ENABLE;

/*****************************************************************************************************/

CREATE OR REPLACE TRIGGER CONTROL_PESO_COCCION BEFORE INSERT OR UPDATE ON COCCION
For Each Row

DECLARE
	v_peso_chip NUMBER(10);
BEGIN

SELECT m.PESOCHIP INTO v_peso_chip FROM MADERACHIP m WHERE m.ID = :NEW.IDCHIP;

IF(:NEW.PESO > v_peso_chip) THEN
	Raise_Application_Error (-20002, 'Fallo el control de peso');
END IF;

END;
/
ALTER TRIGGER CONTROL_PESO_COCCION ENABLE;

/*****************************************************************************************************/

CREATE OR REPLACE TRIGGER ACTUALIZAR_PESO_CHIPEO AFTER INSERT OR UPDATE ON MADERACHIP
FOR EACH ROW

DECLARE
	v_peso_suma NUMBER(10);
BEGIN

	SELECT SUM(m.PESOMADERALOTE) INTO v_peso_suma FROM MADERACHIP m WHERE m.LOTE = :NEW.LOTE;
	UPDATE LOTEMADERA SET PESOACTUAL = v_peso_suma WHERE IDLOTE = :NEW.LOTE;

END;
/
ALTER TRIGGER ACTUALIZAR_PESO_CHIPEO ENABLE;